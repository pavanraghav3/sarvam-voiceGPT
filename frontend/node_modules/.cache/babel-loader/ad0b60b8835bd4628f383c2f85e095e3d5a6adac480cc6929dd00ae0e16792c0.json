{"ast":null,"code":"var _jsxFileName = \"D:\\\\sarvam voice app\\\\frontend\\\\src\\\\VoiceRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  onRecordingComplete\n}) => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const mediaRecorder = useRef(null);\n  const chunks = useRef([]);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorder.current = new MediaRecorder(stream);\n    mediaRecorder.current.ondataavailable = e => chunks.current.push(e.data);\n    mediaRecorder.current.onstop = () => {\n      const audioBlob = new Blob(chunks.current, {\n        type: \"audio/webm\"\n      });\n      chunks.current = [];\n      onRecordingComplete(audioBlob);\n    };\n    mediaRecorder.current.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    var _mediaRecorder$curren;\n    (_mediaRecorder$curren = mediaRecorder.current) === null || _mediaRecorder$curren === void 0 ? void 0 : _mediaRecorder$curren.stop();\n    setRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: recording ? stopRecording : startRecording,\n    children: recording ? \"Stop Recording\" : \"Start Recording\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecorder, \"MuDz//9veA4a5iz4nnAIHJfUW9A=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","VoiceRecorder","onRecordingComplete","_s","recording","setRecording","mediaRecorder","chunks","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","e","push","data","onstop","audioBlob","Blob","type","start","stopRecording","_mediaRecorder$curren","stop","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/sarvam voice app/frontend/src/VoiceRecorder.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\ninterface VoiceRecorderProps {\r\n  onRecordingComplete: (blob: Blob) => void;\r\n}\r\n\r\nconst VoiceRecorder: React.FC<VoiceRecorderProps> = ({ onRecordingComplete }) => {\r\n  const [recording, setRecording] = useState(false);\r\n  const mediaRecorder = useRef<MediaRecorder | null>(null);\r\n  const chunks = useRef<Blob[]>([]);\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    mediaRecorder.current = new MediaRecorder(stream);\r\n    mediaRecorder.current.ondataavailable = e => chunks.current.push(e.data);\r\n    mediaRecorder.current.onstop = () => {\r\n      const audioBlob = new Blob(chunks.current, { type: \"audio/webm\" });\r\n      chunks.current = [];\r\n      onRecordingComplete(audioBlob);\r\n    };\r\n    mediaRecorder.current.start();\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorder.current?.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  return (\r\n    <button onClick={recording ? stopRecording : startRecording}>\r\n      {recording ? \"Stop Recording\" : \"Start Recording\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default VoiceRecorder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,aAAa,GAAGR,MAAM,CAAuB,IAAI,CAAC;EACxD,MAAMS,MAAM,GAAGT,MAAM,CAAS,EAAE,CAAC;EAEjC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzEP,aAAa,CAACQ,OAAO,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IACjDH,aAAa,CAACQ,OAAO,CAACE,eAAe,GAAGC,CAAC,IAAIV,MAAM,CAACO,OAAO,CAACI,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;IACxEb,aAAa,CAACQ,OAAO,CAACM,MAAM,GAAG,MAAM;MACnC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACf,MAAM,CAACO,OAAO,EAAE;QAAES,IAAI,EAAE;MAAa,CAAC,CAAC;MAClEhB,MAAM,CAACO,OAAO,GAAG,EAAE;MACnBZ,mBAAmB,CAACmB,SAAS,CAAC;IAChC,CAAC;IACDf,aAAa,CAACQ,OAAO,CAACU,KAAK,CAAC,CAAC;IAC7BnB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC1B,CAAAA,qBAAA,GAAApB,aAAa,CAACQ,OAAO,cAAAY,qBAAA,uBAArBA,qBAAA,CAAuBC,IAAI,CAAC,CAAC;IAC7BtB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAQ4B,OAAO,EAAExB,SAAS,GAAGqB,aAAa,GAAGjB,cAAe;IAAAqB,QAAA,EACzDzB,SAAS,GAAG,gBAAgB,GAAG;EAAiB;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEb,CAAC;AAAC9B,EAAA,CA5BIF,aAA2C;AAAAiC,EAAA,GAA3CjC,aAA2C;AA8BjD,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}