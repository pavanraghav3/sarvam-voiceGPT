{"ast":null,"code":"var _jsxFileName = \"D:\\\\sarvam voice app\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ChatSidebar from \"./components/ChatSidebar.tsx\";\nimport ChatWindow from \"./components/ChatWindow.tsx\";\nimport ChatInput from \"./components/ChatInput.tsx\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch all chats on mount\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/chats\").then(res => {\n      setChats(res.data.reverse()); // newest first\n      if (res.data.length > 0) setSelectedChatId(res.data[0]._id);\n    });\n  }, []);\n\n  // Fetch messages when chat changes\n  useEffect(() => {\n    if (selectedChatId) {\n      axios.get(`http://localhost:5000/chats/${selectedChatId}`).then(res => {\n        setMessages(res.data.messages || []);\n      });\n    }\n  }, [selectedChatId]);\n  const handleSelectChat = chatId => {\n    setSelectedChatId(chatId);\n  };\n  const handleNewChat = () => {\n    axios.post(\"http://localhost:5000/chats\").then(res => {\n      setChats(prev => [{\n        _id: res.data.chat_id,\n        created_at: new Date().toISOString()\n      }, ...prev]);\n      setSelectedChatId(res.data.chat_id);\n      setMessages([]);\n    });\n  };\n  const handleSend = text => {\n    if (!selectedChatId) return;\n    setLoading(true);\n    // Add user message locally\n    const userMsg = {\n      role: \"user\",\n      content: text,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    // Send to backend\n    axios.post(`http://localhost:5000/chats/${selectedChatId}/messages`, {\n      role: \"user\",\n      content: text\n    }).then(() => axios.post(\"http://localhost:5000/process-voice\", null, {\n      params: {\n        chat_id: selectedChatId,\n        text\n      } // You may need to adjust this if using voice\n    })).then(res => {\n      // Add assistant message\n      setMessages(prev => [...prev, {\n        role: \"assistant\",\n        content: res.data.responseText,\n        timestamp: new Date().toISOString()\n      }]);\n    }).finally(() => setLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container dark-theme\",\n    children: [/*#__PURE__*/_jsxDEV(ChatSidebar, {\n      chats: chats,\n      selectedChatId: selectedChatId,\n      onSelectChat: handleSelectChat,\n      onNewChat: handleNewChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSend: handleSend,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mseFSi7NJY1UUOb3GsEOo29hGYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChatSidebar","ChatWindow","ChatInput","jsxDEV","_jsxDEV","App","_s","chats","setChats","selectedChatId","setSelectedChatId","messages","setMessages","loading","setLoading","get","then","res","data","reverse","length","_id","handleSelectChat","chatId","handleNewChat","post","prev","chat_id","created_at","Date","toISOString","handleSend","text","userMsg","role","content","timestamp","params","responseText","finally","className","children","onSelectChat","onNewChat","fileName","_jsxFileName","lineNumber","columnNumber","onSend","disabled","_c","$RefreshReg$"],"sources":["D:/sarvam voice app/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ChatSidebar from \"./components/ChatSidebar.tsx\";\r\nimport ChatWindow from \"./components/ChatWindow.tsx\";\r\nimport ChatInput from \"./components/ChatInput.tsx\";\r\nimport VoiceRecorder from \"./components/VoiceRecorder\";\r\nimport \"./App.css\";\r\n\r\ninterface Message {\r\n  role: \"user\" | \"assistant\";\r\n  content: string;\r\n  timestamp: string;\r\n}\r\n\r\ninterface Chat {\r\n  _id: string;\r\n  created_at: string;\r\n  messages?: Message[];\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [selectedChatId, setSelectedChatId] = useState<string | null>(null);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch all chats on mount\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/chats\").then((res) => {\r\n      setChats(res.data.reverse()); // newest first\r\n      if (res.data.length > 0) setSelectedChatId(res.data[0]._id);\r\n    });\r\n  }, []);\r\n\r\n  // Fetch messages when chat changes\r\n  useEffect(() => {\r\n    if (selectedChatId) {\r\n      axios.get(`http://localhost:5000/chats/${selectedChatId}`).then((res) => {\r\n        setMessages(res.data.messages || []);\r\n      });\r\n    }\r\n  }, [selectedChatId]);\r\n\r\n  const handleSelectChat = (chatId: string) => {\r\n    setSelectedChatId(chatId);\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    axios.post(\"http://localhost:5000/chats\").then((res) => {\r\n      setChats((prev) => [\r\n        { _id: res.data.chat_id, created_at: new Date().toISOString() },\r\n        ...prev,\r\n      ]);\r\n      setSelectedChatId(res.data.chat_id);\r\n      setMessages([]);\r\n    });\r\n  };\r\n\r\n  const handleSend = (text: string) => {\r\n    if (!selectedChatId) return;\r\n    setLoading(true);\r\n    // Add user message locally\r\n    const userMsg: Message = {\r\n      role: \"user\",\r\n      content: text,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n    // Send to backend\r\n    axios\r\n      .post(`http://localhost:5000/chats/${selectedChatId}/messages`, {\r\n        role: \"user\",\r\n        content: text,\r\n      })\r\n      .then(() =>\r\n        axios.post(\"http://localhost:5000/process-voice\", null, {\r\n          params: { chat_id: selectedChatId, text }, // You may need to adjust this if using voice\r\n        })\r\n      )\r\n      .then((res) => {\r\n        // Add assistant message\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          {\r\n            role: \"assistant\",\r\n            content: res.data.responseText,\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        ]);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container dark-theme\">\r\n      <ChatSidebar\r\n        chats={chats}\r\n        selectedChatId={selectedChatId}\r\n        onSelectChat={handleSelectChat}\r\n        onNewChat={handleNewChat}\r\n      />\r\n      <div className=\"main-chat-area\">\r\n        <ChatWindow messages={messages} />\r\n        <ChatInput onSend={handleSend} disabled={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}