{"ast":null,"code":"var _jsxFileName = \"D:\\\\sarvam voice app\\\\frontend\\\\src\\\\VoiceRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [userText, setUserText] = useState(\"\");\n  const [responseText, setResponseText] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const audioRef = useRef(null);\n  const startRecording = async () => {\n    audioChunksRef.current = [];\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          audioChunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = handleAudioData;\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error(\"Error accessing microphone:\", err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsProcessing(true);\n\n      // Stop all tracks in the stream\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const handleAudioData = async () => {\n    const audioBlob = new Blob(audioChunksRef.current, {\n      type: \"audio/wav\"\n    });\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob);\n    try {\n      const response = await axios.post(\"http://localhost:5000/process-voice\", formData);\n      const data = response.data;\n      setUserText(data.userText);\n      setResponseText(data.responseText);\n\n      // Create audio from base64 string\n      const audioSrc = `data:audio/wav;base64,${data.responseAudio}`;\n      if (audioRef.current) {\n        audioRef.current.src = audioSrc;\n        audioRef.current.play();\n      }\n    } catch (error) {\n      console.error(\"Error processing voice:\", error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-recorder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voice Chat Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isRecording ? stopRecording : startRecording,\n        disabled: isProcessing,\n        className: isRecording ? \"stop-btn\" : \"record-btn\",\n        children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your request...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: [userText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message user-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), \" \", userText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), responseText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Assistant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), \" \", responseText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceRecorder, \"3U/VJCIyWGLnbw60Y/I6yKRnED8=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","VoiceRecorder","_s","isRecording","setIsRecording","isProcessing","setIsProcessing","userText","setUserText","responseText","setResponseText","mediaRecorderRef","audioChunksRef","audioRef","startRecording","current","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","e","data","size","push","onstop","handleAudioData","start","err","console","error","stopRecording","stop","getTracks","forEach","track","audioBlob","Blob","type","formData","FormData","append","response","post","audioSrc","responseAudio","src","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","style","display","_c","$RefreshReg$"],"sources":["D:/sarvam voice app/frontend/src/VoiceRecorder.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VoiceRecorder: React.FC = () => {\r\n  const [isRecording, setIsRecording] = useState<boolean>(false);\r\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\r\n  const [userText, setUserText] = useState<string>(\"\");\r\n  const [responseText, setResponseText] = useState<string>(\"\");\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n  const audioRef = useRef<HTMLAudioElement | null>(null);\r\n\r\n  const startRecording = async () => {\r\n    audioChunksRef.current = [];\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        if (e.data.size > 0) {\r\n          audioChunksRef.current.push(e.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.onstop = handleAudioData;\r\n\r\n      mediaRecorderRef.current = mediaRecorder;\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error(\"Error accessing microphone:\", err);\r\n    }\r\n  };\r\n  \r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n      setIsProcessing(true);\r\n\r\n      // Stop all tracks in the stream\r\n      mediaRecorderRef.current.stream\r\n        .getTracks()\r\n        .forEach((track) => track.stop());\r\n    }\r\n  };\r\n\r\n  const handleAudioData = async () => {\r\n    const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n    const formData = new FormData();\r\n    formData.append(\"file\", audioBlob);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/process-voice\",\r\n        formData\r\n      );\r\n      const data = response.data;\r\n\r\n      setUserText(data.userText);\r\n      setResponseText(data.responseText);\r\n\r\n      // Create audio from base64 string\r\n      const audioSrc = `data:audio/wav;base64,${data.responseAudio}`;\r\n      if (audioRef.current) {\r\n        audioRef.current.src = audioSrc;\r\n        audioRef.current.play();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error processing voice:\", error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"voice-recorder-container\">\r\n      <h2>Voice Chat Assistant</h2>\r\n\r\n      <div className=\"controls\">\r\n        <button\r\n          onClick={isRecording ? stopRecording : startRecording}\r\n          disabled={isProcessing}\r\n          className={isRecording ? \"stop-btn\" : \"record-btn\"}\r\n        >\r\n          {isRecording ? \"Stop Recording\" : \"Start Recording\"}\r\n        </button>\r\n\r\n        {isProcessing && <p>Processing your request...</p>}\r\n      </div>\r\n\r\n      <div className=\"conversation\">\r\n        {userText && (\r\n          <div className=\"message user-message\">\r\n            <p>\r\n              <strong>You:</strong> {userText}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {responseText && (\r\n          <div className=\"message assistant-message\">\r\n            <p>\r\n              <strong>Assistant:</strong> {responseText}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <audio ref={audioRef} style={{ display: \"none\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceRecorder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}