{"ast":null,"code":"var _jsxFileName = \"D:\\\\sarvam voice app\\\\frontend\\\\src\\\\components\\\\ChatWindow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to extract text from content\nfunction getMessageText(content) {\n  if (typeof content === \"object\" && content !== null) {\n    return content.text || \"\";\n  }\n  return content;\n}\nconst ChatWindow = ({\n  messages\n}) => {\n  _s();\n  const endRef = useRef(null);\n  useEffect(() => {\n    var _endRef$current;\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${msg.role}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: getMessageText(msg.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), msg.audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          style: {\n            width: \"100%\",\n            marginTop: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: `data:audio/wav;base64,${msg.audio}`,\n            type: \"audio/wav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-timestamp\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: endRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"wkzjRsewh8pSmp35FLqjNBWGCLs=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","getMessageText","content","text","ChatWindow","messages","_s","endRef","_endRef$current","current","scrollIntoView","behavior","className","children","map","msg","idx","role","fileName","_jsxFileName","lineNumber","columnNumber","audio","controls","style","width","marginTop","src","type","Date","timestamp","toLocaleTimeString","ref","_c","$RefreshReg$"],"sources":["D:/sarvam voice app/frontend/src/components/ChatWindow.tsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\ninterface Message {\r\n  role: \"user\" | \"assistant\";\r\n  content: string | { text: string }; // allow string or object\r\n  timestamp: string;\r\n  audio?: string; // optional base64 audio string\r\n}\r\n\r\ninterface ChatWindowProps {\r\n  messages: Message[];\r\n}\r\n\r\n// Helper function to extract text from content\r\nfunction getMessageText(content: string | { text: string }) {\r\n  if (typeof content === \"object\" && content !== null) {\r\n    return content.text || \"\";\r\n  }\r\n  return content;\r\n}\r\n\r\nconst ChatWindow: React.FC<ChatWindowProps> = ({ messages }) => {\r\n  const endRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      {messages.map((msg, idx) => (\r\n        <div key={idx} className={`chat-message ${msg.role}`}>\r\n          <div className=\"chat-bubble\">\r\n            <span>{getMessageText(msg.content)}</span>\r\n            {msg.audio && (\r\n              <audio controls style={{ width: \"100%\", marginTop: 6 }}>\r\n                <source src={`data:audio/wav;base64,${msg.audio}`} type=\"audio/wav\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            )}\r\n            <div className=\"chat-timestamp\">\r\n              {new Date(msg.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div ref={endRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAajD;AACA,SAASC,cAAcA,CAACC,OAAkC,EAAE;EAC1D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE;IACnD,OAAOA,OAAO,CAACC,IAAI,IAAI,EAAE;EAC3B;EACA,OAAOD,OAAO;AAChB;AAEA,MAAME,UAAqC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAMC,MAAM,GAAGV,MAAM,CAAiB,IAAI,CAAC;EAE3CC,SAAS,CAAC,MAAM;IAAA,IAAAU,eAAA;IACd,CAAAA,eAAA,GAAAD,MAAM,CAACE,OAAO,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACxD,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzBR,QAAQ,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBhB,OAAA;MAAeY,SAAS,EAAE,gBAAgBG,GAAG,CAACE,IAAI,EAAG;MAAAJ,QAAA,eACnDb,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bb,OAAA;UAAAa,QAAA,EAAOZ,cAAc,CAACc,GAAG,CAACb,OAAO;QAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACzCN,GAAG,CAACO,KAAK,iBACRtB,OAAA;UAAOuB,QAAQ;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAE,CAAE;UAAAb,QAAA,gBACrDb,OAAA;YAAQ2B,GAAG,EAAE,yBAAyBZ,GAAG,CAACO,KAAK,EAAG;YAACM,IAAI,EAAC;UAAW;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,oDAExE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACR,eACDrB,OAAA;UAAKY,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5B,IAAIgB,IAAI,CAACd,GAAG,CAACe,SAAS,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAZEL,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaR,CACN,CAAC,eACFrB,OAAA;MAAKgC,GAAG,EAAEzB;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BIF,UAAqC;AAAA6B,EAAA,GAArC7B,UAAqC;AA8B3C,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}